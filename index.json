[{"authors":["admin"],"categories":null,"content":"Shamsa Abid is a PhD Candidate of Computer Science specializing in Code Recommendation at the Lahore University of Managment Sciences Software Engineering Lab. Her research interests include software reuse, code recommendation systems and information retrieval.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://shamsa-abid.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Shamsa Abid is a PhD Candidate of Computer Science specializing in Code Recommendation at the Lahore University of Managment Sciences Software Engineering Lab. Her research interests include software reuse, code recommendation systems and information retrieval.","tags":null,"title":"Shamsa Abid","type":"authors"},{"authors":["Shamsa Abid"],"categories":[],"content":"","date":1565568000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565568000,"objectID":"018f980517687c2bb2377d5357c77b8d","permalink":"https://shamsa-abid.github.io/publication/pub_facer/","publishdate":"2019-11-29T15:38:16+05:00","relpermalink":"/publication/pub_facer/","section":"publication","summary":"Developers need to be able to find reusable code for desired software features in a way that supports opportunistic programming for increased developer productivity. Our objective is to develop a recommendation system that provides a developer with function recommendations having functionality relevant to her development task. We employ a combination of information retrieval, static code analysis and data mining techniques to build the proposed recommendation system called FACER (Feature-driven API usage-based Code Examples Recommender). We performed an experimental evaluation on 122 projects from GitHub from selected categories to determine the accuracy of the retrieved code for related features. FACER recommended functions with a precision of 54% and 75% when evaluated using automated and manual methods respectively.","tags":[],"title":"Recommending Related Functions from API Usage-Based Function Clone Structures","type":"publication"},{"authors":["Shamsa Abid","Salman Javed","Momna Naseem","Suleman Shahid","Hamid Abdul Basit","Yoshiki Higo"],"categories":[],"content":"","date":1490572800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1490572800,"objectID":"ae78bc1fa2e3af3ac8d6494950b30dfe","permalink":"https://shamsa-abid.github.io/publication/pub_codeease/","publishdate":"2017-03-27T00:00:00Z","relpermalink":"/publication/pub_codeease/","section":"publication","summary":"Searching for code examples on the Internet is commonly and frequently performed by software developers but wastes a lot of their time and reduces their productivity. To aid developers with this problem, a system is needed that can allow them to get appropriate code recommendations for reuse within the IDE. In this paper, we present our prototype tool CodeEase, developed as an Eclipse plugin, which generates method recommendations against the code of the developer. The recommendations are based on clone detection and an analysis of Method Clone Structures (MCS) - a type of structural clones- from a large repository of code.","tags":[],"title":"CodeEase: Harnessing Method Clone Structures for Reuse","type":"publication"},{"authors":["Shamsa Abid","Zohaa Qamar","Natasha Khan","Muhammad Shayan","Hamid Abdul Basit"],"categories":[],"content":"","date":1480982400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1480982400,"objectID":"915a3fe103f4c3045462c993a3ad02cb","permalink":"https://shamsa-abid.github.io/publication/pub_dpers/","publishdate":"2016-12-06T00:00:00Z","relpermalink":"/publication/pub_dpers/","section":"publication","summary":"Software design patterns provide well-known solutions to recurring problems faced by developers. However, not all developers are proficient with the use of design patterns. To facilitate developers in this regard, we propose a design pattern usage examples retrieval system. The retrieval is based on analyzing the developer's development context to provide design pattern usage examples from projects that have a similar functional domain to that of the developer. In our approach, the Latent Dirichlet Allocation model is used to extract domain keywords from individual projects' source code. The domain keywords are stored in a fact repository and are used to construct the respective projects' profiles. We perform content-based retrieval by using a developer's domain keywords to retrieve only matching projects and their associated design patterns-based code (as design pattern usage examples) from the fact repository. Quantitative and qualitative analysis of the results from internal experiments and a user study indicate that our system provides fairly accurate results.","tags":[],"title":"Retrieving Design Pattern Usage Examples using Domain Matching","type":"publication"},{"authors":["Shamsa Abid","Hamid Abdul Basit"],"categories":[],"content":"","date":1463961600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1463961600,"objectID":"29f77e3421389b827f8e9669687c23c7","permalink":"https://shamsa-abid.github.io/publication/pub_towardsrecsys/","publishdate":"2016-05-23T00:00:00Z","relpermalink":"/publication/pub_towardsrecsys/","section":"publication","summary":"Structural clones cover all kinds of large-granularity repeated program structures such as similar methods, classes, directories, and their recurring combinations. We can use these structural clones to enable code completion by means of identification and recommendation of suitable candidates from a large code repository. By providing a user with recommendations based on Method Clone Structures (MCS) -- a type of structural clones -- mined from a large code repository, we are increasing our chances of recommending a set of methods that the developer is highly likely to use. The market basket analysis philosophy is implicitly manifested in our recommendation approach.","tags":[],"title":"Towards a Structural Clone Based Recommender System","type":"publication"},{"authors":["Shamsa Abid","Hamid Abdul Basit","Naveed Arshad"],"categories":[],"content":"","date":1434931200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1434931200,"objectID":"7e1d76df2c90546c8140f8fc0f9eddc6","permalink":"https://shamsa-abid.github.io/publication/pub_reflectionsonrefactoring/","publishdate":"2015-06-22T00:00:00Z","relpermalink":"/publication/pub_reflectionsonrefactoring/","section":"publication","summary":"Teaching refactoring effectively while making students realize the importance and benefits of refactoring is a challenge. In this direction, an experiment was carried out while conducting the course project for the Refactoring and Design Patterns course. This paper discusses the results of the experiment that involved two different project schemes to carry out refactoring activities on the same code base. One scheme was post-enhancement refactoring and the other was pre-enhancement refactoring. The aim of the experiment was to decide which scheme was beneficial in terms of better understanding, appreciation, and implementation of refactoring.","tags":[],"title":"Reflections on Teaching Refactoring: A Tale of Two Projects","type":"publication"}]